name: Build GL-MT300N-V2 Custom Firmware
# Created by: Yntools
# Last updated: 2025-01-16

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache downloads
        uses: actions/cache@v4
        with:
          path: |
            dl
            feeds
          key: ${{runner.os}}-downloads-${{hashFiles('feeds.conf.default')}}
          restore-keys: |
            ${{runner.os}}-downloads-

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            ccache \
            ecj \
            fastjar \
            file \
            g++ \
            gawk \
            gettext \
            git \
            java-propose-classpath \
            libelf-dev \
            libncurses5-dev \
            libssl-dev \
            python3-dev \
            python3-distutils \
            python3-setuptools \
            rsync \
            subversion \
            time \
            unzip \
            wget \
            zlib1g-dev \
            zstd

      # Шаг 1: Клонируем GL.iNet SDK
      - name: Clone GL.iNet SDK
        run: |
          git clone https://github.com/gl-inet/gl-infra-builder.git
          cd gl-infra-builder
          # Используем последний стабильный релиз
          git checkout main

      # Шаг 2: Подготавливаем окружение GL.iNet
      - name: Setup GL.iNet build environment
        run: |
          cd gl-infra-builder
          # Генерируем конфигурацию для MT300N-V2
          python3 setup.py -c configs/mt300n-v2.yml
          cd openwrt
          
          # Добавляем feed для модемов
          echo "src-git modemfeed https://github.com/koshev-msk/modemfeed.git" >> feeds.conf.default
          
          # Обновляем и устанавливаем feeds
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
          # Отдельно обновляем и устанавливаем modemfeed
          ./scripts/feeds update modemfeed
          ./scripts/feeds install -a -p modemfeed

      # Шаг 3: Конфигурируем сборку
      - name: Configure build
        working-directory: gl-infra-builder/openwrt
        run: |
          cat > .config << 'EOF'
          CONFIG_TARGET_ramips=y
          CONFIG_TARGET_ramips_mt76x8=y
          CONFIG_TARGET_ramips_mt76x8_DEVICE_gl-mt300n-v2=y
          
          # Оптимизация компиляции
          CONFIG_DEVEL=y
          CONFIG_CCACHE=y
          
          # Базовая система и сеть
          CONFIG_PACKAGE_dnsmasq-full=y
          CONFIG_PACKAGE_dropbear=y
          CONFIG_PACKAGE_firewall4=y
          CONFIG_PACKAGE_nftables=y
          CONFIG_PACKAGE_ip-full=y
          CONFIG_PACKAGE_ipset=y
          
          # Wi-Fi (обязательные компоненты)
          CONFIG_PACKAGE_kmod-mt7628=y
          CONFIG_PACKAGE_gl-sdk4-mtk-wifi-v2=y
          CONFIG_PACKAGE_wpad-basic-wolfssl=y
          CONFIG_PACKAGE_hostapd-common=y
          CONFIG_PACKAGE_wireless-tools=y
          CONFIG_PACKAGE_iwinfo=y
          
          # USB поддержка
          CONFIG_PACKAGE_kmod-usb-core=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb-net=y
          CONFIG_PACKAGE_kmod-usb-net-cdc-mbim=y
          CONFIG_PACKAGE_kmod-usb-acm=y
          
          # LED поддержка
          CONFIG_PACKAGE_kmod-leds-gpio=y
          
          # LuCI (оптимизированный набор)
          CONFIG_PACKAGE_luci-light=y
          CONFIG_PACKAGE_luci-base=y
          CONFIG_PACKAGE_luci-mod-admin-full=y
          CONFIG_PACKAGE_luci-mod-network=y
          CONFIG_PACKAGE_luci-mod-status=y
          CONFIG_PACKAGE_luci-mod-system=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          CONFIG_PACKAGE_luci-i18n-base-ru=y
          CONFIG_PACKAGE_luci-i18n-firewall-ru=y
          CONFIG_PACKAGE_luci-i18n-status-ru=y
          
          # Пакеты для модемов
          CONFIG_PACKAGE_xmm-modem=y
          CONFIG_PACKAGE_luci-proto-xmm=y
          CONFIG_PACKAGE_modeminfo=y
          CONFIG_PACKAGE_luci-app-modeminfo=y
          CONFIG_PACKAGE_luci-i18n-modeminfo-ru=y
          CONFIG_PACKAGE_atinout=y
          CONFIG_PACKAGE_luci-app-atinout=y
          CONFIG_PACKAGE_luci-i18n-atinout-ru=y
          
          # Отключаем ненужные компоненты GL.iNet
          CONFIG_PACKAGE_gl-base-files=n
          CONFIG_PACKAGE_gl-lua=n
          CONFIG_PACKAGE_gl-ui=n
          CONFIG_PACKAGE_gl-mqtt=n
          CONFIG_PACKAGE_gl-tertf=n
          CONFIG_PACKAGE_gl-util=n
          CONFIG_PACKAGE_gl-wifi-core=n
          
          # Отключаем IPv6 для экономии места
          CONFIG_IPV6=n
          CONFIG_PACKAGE_ip6tables=n
          CONFIG_PACKAGE_odhcp6c=n
          CONFIG_PACKAGE_luci-proto-ipv6=n
          CONFIG_PACKAGE_odhcpd-ipv6only=n
          
          # Включаем поддержку zram для swap
          CONFIG_PACKAGE_zram-swap=y
          CONFIG_PACKAGE_kmod-zram=y
          
          # Оптимизация размера и файловой системы
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_PACKAGE_kmod-nls-base=y
          CONFIG_TARGET_SQUASHFS_BLOCK_SIZE=256
          
          # Важные утилиты
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_wget-ssl=y
          EOF
          
          # Применяем конфигурацию
          make defconfig

      # Шаг 4: Проверка размера прошивки
      - name: Check firmware size
        working-directory: gl-infra-builder/openwrt
        run: |
          echo "Checking firmware size..."
          find bin/targets/ramips/mt76x8/ -name "*sysupgrade.bin" -exec ls -lh {} \;
          find bin/targets/ramips/mt76x8/ -name "*factory.bin" -exec ls -lh {} \;

      # Шаг 5: Собираем прошивку
      - name: Build firmware
        working-directory: gl-infra-builder/openwrt
        env:
          FORCE_UNSAFE_CONFIGURE: 1
        run: |
          # Сначала компилируем пакеты из modemfeed
          make package/feeds/modemfeed/{xmm-modem,modeminfo,atinout}/compile -j$(nproc) || make package/feeds/modemfeed/{xmm-modem,modeminfo,atinout}/compile V=s
          
          # Затем собираем всю прошивку
          make download -j8
          make -j$(nproc) || make -j1 V=s

      # Шаг 6: Собираем артефакты
      - name: Collect artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gl-mt300n-v2-firmware
          path: |
            gl-infra-builder/openwrt/bin/targets/ramips/mt76x8/*sysupgrade.bin
            gl-infra-builder/openwrt/bin/targets/ramips/mt76x8/*factory.bin
          retention-days: 5